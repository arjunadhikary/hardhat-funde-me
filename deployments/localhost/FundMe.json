{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getaddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimizedwithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unoptimizedwithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x59e1bd7187f193c887449c7a6e7ba54c83e366de383c0baf3310ad1e56ea2315",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1067996",
    "logsBloom": "0x
    "blockHash": "0xc161767f81b3d40b7805cc1039c13fac94740f096b7fce058bece42407e7cffe",
    "transactionHash": "0x59e1bd7187f193c887449c7a6e7ba54c83e366de383c0baf3310ad1e56ea2315",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1067996",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "bee30f3b7c05153542beb4a7d565de5e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getaddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimizedwithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unoptimizedwithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n    uint256 public constant MINIMUM_USD = 1 * 10e18;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function optimizedwithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function unoptimizedwithdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getaddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n}\\n\",\"keccak256\":\"0x47573c74879d88b42eb16713eacfd7bce2648e744b214bc784d654141bdaa324\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface avi)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(avi);\\n\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xfb224bbe234f3c7bd1b45b637c0457edb21fda0104efeb73f14a5de094b54f8b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012f6380380620012f683398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61118a806200016c6000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063d7b4750c14610177578063e209b4b2146101b45761008e565b80636b69a592146100985780636d8cb2b4146100c3578063832b1d2c146100da578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610304565b6040516100ba9190610a78565b60405180910390f35b3480156100cf57600080fd5b506100d8610310565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610af6565b6105b6565b60405161010e9190610a78565b60405180910390f35b34801561012357600080fd5b5061012c6105fe565b6040516101399190610b32565b60405180910390f35b34801561014e57600080fd5b50610157610628565b6040516101649190610bac565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061019e60048036038101906101999190610bf3565b610652565b6040516101ab9190610b32565b60405180910390f35b3480156101c057600080fd5b506101c961069a565b005b678ac7230489e80000610209600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108dc90919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c7d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102989190610ccc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610397576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905060005b81518110156104a557600082828151811061044357610442610d22565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610d51565b915050610425565b50600067ffffffffffffffff8111156104c1576104c0610d9a565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b50600190805190602001906105059291906109b8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c90610dfa565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610e5b565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061066857610667610d22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610721576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156107cc5760006001828154811061074757610746610d22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c490610d51565b915050610724565b50600067ffffffffffffffff8111156107e8576107e7610d9a565b5b6040519080825280602002602001820160405280156108165781602001602082028036833780820191505090505b506001908051906020019061082c9291906109b8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161085390610dfa565b60006040518083038185875af1925050503d8060008114610890576040519150601f19603f3d011682016040523d82523d6000602084013e610895565b606091505b50509050806108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090610e5b565b60405180910390fd5b50565b6000806108e883610918565b90506000670de0b6b3a764000085836109019190610e7b565b61090b9190610f04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190610fc2565b5050509150506402540be400816109b0919061103d565b915050919050565b828054828255906000526020600020908101928215610a31579160200282015b82811115610a305782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d8565b5b509050610a3e9190610a42565b5090565b5b80821115610a5b576000816000905550600101610a43565b5090565b6000819050919050565b610a7281610a5f565b82525050565b6000602082019050610a8d6000830184610a69565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac382610a98565b9050919050565b610ad381610ab8565b8114610ade57600080fd5b50565b600081359050610af081610aca565b92915050565b600060208284031215610b0c57610b0b610a93565b5b6000610b1a84828501610ae1565b91505092915050565b610b2c81610ab8565b82525050565b6000602082019050610b476000830184610b23565b92915050565b6000819050919050565b6000610b72610b6d610b6884610a98565b610b4d565b610a98565b9050919050565b6000610b8482610b57565b9050919050565b6000610b9682610b79565b9050919050565b610ba681610b8b565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610a5f565b8114610bdb57600080fd5b50565b600081359050610bed81610bc7565b92915050565b600060208284031215610c0957610c08610a93565b5b6000610c1784828501610bde565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c67601b83610c20565b9150610c7282610c31565b602082019050919050565b60006020820190508181036000830152610c9681610c5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd782610a5f565b9150610ce283610a5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1757610d16610c9d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5c82610a5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8f57610d8e610c9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de4600083610dc9565b9150610def82610dd4565b600082019050919050565b6000610e0582610dd7565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e45600b83610c20565b9150610e5082610e0f565b602082019050919050565b60006020820190508181036000830152610e7481610e38565b9050919050565b6000610e8682610a5f565b9150610e9183610a5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eca57610ec9610c9d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0f82610a5f565b9150610f1a83610a5f565b925082610f2a57610f29610ed5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5481610f35565b8114610f5f57600080fd5b50565b600081519050610f7181610f4b565b92915050565b6000819050919050565b610f8a81610f77565b8114610f9557600080fd5b50565b600081519050610fa781610f81565b92915050565b600081519050610fbc81610bc7565b92915050565b600080600080600060a08688031215610fde57610fdd610a93565b5b6000610fec88828901610f62565b9550506020610ffd88828901610f98565b945050604061100e88828901610fad565b935050606061101f88828901610fad565b925050608061103088828901610f62565b9150509295509295909350565b600061104882610f77565b915061105383610f77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109257611091610c9d565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110cf576110ce610c9d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110c5761110b610c9d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114957611148610c9d565b5b82820290509291505056fea2646970667358221220e40680e19851da06825176706e75aa0c48459c6fc068d455e82bd76607ff73b564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063d7b4750c14610177578063e209b4b2146101b45761008e565b80636b69a592146100985780636d8cb2b4146100c3578063832b1d2c146100da578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610304565b6040516100ba9190610a78565b60405180910390f35b3480156100cf57600080fd5b506100d8610310565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610af6565b6105b6565b60405161010e9190610a78565b60405180910390f35b34801561012357600080fd5b5061012c6105fe565b6040516101399190610b32565b60405180910390f35b34801561014e57600080fd5b50610157610628565b6040516101649190610bac565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061019e60048036038101906101999190610bf3565b610652565b6040516101ab9190610b32565b60405180910390f35b3480156101c057600080fd5b506101c961069a565b005b678ac7230489e80000610209600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108dc90919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c7d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102989190610ccc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b678ac7230489e8000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610397576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561041b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d1575b5050505050905060005b81518110156104a557600082828151811061044357610442610d22565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610d51565b915050610425565b50600067ffffffffffffffff8111156104c1576104c0610d9a565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b50600190805190602001906105059291906109b8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c90610dfa565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610e5b565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061066857610667610d22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610721576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156107cc5760006001828154811061074757610746610d22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c490610d51565b915050610724565b50600067ffffffffffffffff8111156107e8576107e7610d9a565b5b6040519080825280602002602001820160405280156108165781602001602082028036833780820191505090505b506001908051906020019061082c9291906109b8565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161085390610dfa565b60006040518083038185875af1925050503d8060008114610890576040519150601f19603f3d011682016040523d82523d6000602084013e610895565b606091505b50509050806108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090610e5b565b60405180910390fd5b50565b6000806108e883610918565b90506000670de0b6b3a764000085836109019190610e7b565b61090b9190610f04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190610fc2565b5050509150506402540be400816109b0919061103d565b915050919050565b828054828255906000526020600020908101928215610a31579160200282015b82811115610a305782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d8565b5b509050610a3e9190610a42565b5090565b5b80821115610a5b576000816000905550600101610a43565b5090565b6000819050919050565b610a7281610a5f565b82525050565b6000602082019050610a8d6000830184610a69565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac382610a98565b9050919050565b610ad381610ab8565b8114610ade57600080fd5b50565b600081359050610af081610aca565b92915050565b600060208284031215610b0c57610b0b610a93565b5b6000610b1a84828501610ae1565b91505092915050565b610b2c81610ab8565b82525050565b6000602082019050610b476000830184610b23565b92915050565b6000819050919050565b6000610b72610b6d610b6884610a98565b610b4d565b610a98565b9050919050565b6000610b8482610b57565b9050919050565b6000610b9682610b79565b9050919050565b610ba681610b8b565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610a5f565b8114610bdb57600080fd5b50565b600081359050610bed81610bc7565b92915050565b600060208284031215610c0957610c08610a93565b5b6000610c1784828501610bde565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c67601b83610c20565b9150610c7282610c31565b602082019050919050565b60006020820190508181036000830152610c9681610c5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd782610a5f565b9150610ce283610a5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1757610d16610c9d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5c82610a5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8f57610d8e610c9d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de4600083610dc9565b9150610def82610dd4565b600082019050919050565b6000610e0582610dd7565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e45600b83610c20565b9150610e5082610e0f565b602082019050919050565b60006020820190508181036000830152610e7481610e38565b9050919050565b6000610e8682610a5f565b9150610e9183610a5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eca57610ec9610c9d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0f82610a5f565b9150610f1a83610a5f565b925082610f2a57610f29610ed5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5481610f35565b8114610f5f57600080fd5b50565b600081519050610f7181610f4b565b92915050565b6000819050919050565b610f8a81610f77565b8114610f9557600080fd5b50565b600081519050610fa781610f81565b92915050565b600081519050610fbc81610bc7565b92915050565b600080600080600060a08688031215610fde57610fdd610a93565b5b6000610fec88828901610f62565b9550506020610ffd88828901610f98565b945050604061100e88828901610fad565b935050606061101f88828901610fad565b925050608061103088828901610f62565b9150509295509295909350565b600061104882610f77565b915061105383610f77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109257611091610c9d565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110cf576110ce610c9d565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110c5761110b610c9d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114957611148610c9d565b5b82820290509291505056fea2646970667358221220e40680e19851da06825176706e75aa0c48459c6fc068d455e82bd76607ff73b564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}